// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"

type PagesPageConfig = {
  default: React.ComponentType<any> | ((props: any) => React.ReactNode | Promise<React.ReactNode> | never | void)
  getStaticProps?: (context: any) => Promise<any> | any
  getStaticPaths?: (context: any) => Promise<any> | any
  getServerSideProps?: (context: any) => Promise<any> | any
  getInitialProps?: (context: any) => Promise<any> | any
  /**
   * Segment configuration for legacy Pages Router pages.
   * Validated at build-time by parsePagesSegmentConfig.
   */
  config?: {
    amp?: boolean | 'hybrid' | string // necessary for JS
    maxDuration?: number
    runtime?: 'edge' | 'experimental-edge' | 'nodejs' | string // necessary unless config is exported as const
    regions?: string[]
  }
}

type ApiRouteConfig = {
  default: (req: any, res: any) => Promise<void> | void | Promise<Response> | Response
  config?: {
    api?: {
      bodyParser?: boolean | { sizeLimit?: string }
      responseLimit?: string | number
      externalResolver?: boolean
    }
    runtime?: 'edge' | 'experimental-edge' | 'nodejs' | string // necessary unless config is exported as const
    maxDuration?: number
  }
}






// Validate ../../pages/_app.tsx
{
  const handler = {} as typeof import("../../pages/_app.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/_document.tsx
{
  const handler = {} as typeof import("../../pages/_document.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/analytics.tsx
{
  const handler = {} as typeof import("../../pages/analytics.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/dashboard.tsx
{
  const handler = {} as typeof import("../../pages/dashboard.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/index.tsx
{
  const handler = {} as typeof import("../../pages/index.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/login.tsx
{
  const handler = {} as typeof import("../../pages/login.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/menu-templates.tsx
{
  const handler = {} as typeof import("../../pages/menu-templates.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/qr-codes.tsx
{
  const handler = {} as typeof import("../../pages/qr-codes.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/restaurants.tsx
{
  const handler = {} as typeof import("../../pages/restaurants.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/subscriptions.tsx
{
  const handler = {} as typeof import("../../pages/subscriptions.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/support.tsx
{
  const handler = {} as typeof import("../../pages/support.js")
  handler satisfies PagesPageConfig
}

// Validate ../../pages/api/auth/login.ts
{
  const handler = {} as typeof import("../../pages/api/auth/login.js")
  handler satisfies ApiRouteConfig
}

// Validate ../../pages/api/dashboard/metrics.ts
{
  const handler = {} as typeof import("../../pages/api/dashboard/metrics.js")
  handler satisfies ApiRouteConfig
}

// Validate ../../pages/api/menu-templates/index.ts
{
  const handler = {} as typeof import("../../pages/api/menu-templates/index.js")
  handler satisfies ApiRouteConfig
}

// Validate ../../pages/api/qr-codes/index.ts
{
  const handler = {} as typeof import("../../pages/api/qr-codes/index.js")
  handler satisfies ApiRouteConfig
}

// Validate ../../pages/api/restaurants/index.ts
{
  const handler = {} as typeof import("../../pages/api/restaurants/index.js")
  handler satisfies ApiRouteConfig
}

// Validate ../../pages/api/subscription-plans/index.ts
{
  const handler = {} as typeof import("../../pages/api/subscription-plans/index.js")
  handler satisfies ApiRouteConfig
}

// Validate ../../pages/api/support-tickets/index.ts
{
  const handler = {} as typeof import("../../pages/api/support-tickets/index.js")
  handler satisfies ApiRouteConfig
}


